version: '3.7'

services:

  cache:
    image: redis:7.0.2-alpine
    restart: always
    env_file:
      - ./confs/enabled/cache.env
    volumes:
      - "./volumes/cache_data:/data"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]      
      interval: 3s
      timeout: 3s
      retries: 3
      start_period: 10s

  db:
    image: postgres:14.3-alpine
    restart: always
    # ports:
    #   - 5433:5432
    env_file:
      - ./confs/enabled/db.env
    volumes:
      # init settings, executed only on deploy
      - "./src/postgres/:/docker-entrypoint-initdb.d"
      # database data
      - "./volumes/fakedb_data:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ism_user"]
      interval: 3s
      timeout: 3s
      retries: 3
      start_period: 10s

  fake:
    image: 'ifrn/suapfake:1.0.12'
    build: src/python/fake
    restart: always
    ports:
      - '8001:8000'
    env_file:
      - ./confs/enabled/db.env
      - ./confs/enabled/cache.env
      - ./confs/enabled/fake.env
    volumes:
      - './src/python/fake:/apps/app'
      - './volumes/fakeapp_media:/var/media'
      - './volumes/fakeapp_static:/var/static'
    depends_on:
      db:
        condition: service_healthy
      #   healthcheck:
      #     test: ["CMD-SHELL", "curl --silent --fail http://fakeapp:8000/health/ | grep 'Database: OK' || exit 1"]
      #     interval: 3s
      #     timeout: 1s
      #     start_period: 1s
      #     retries: 30

  portal:
    image: 'ifrn/avaportal:1.0.12'
    build: src/python/portal
    restart: always
    ports:
      - '8000:8000'
    env_file:
      - ./confs/enabled/db.env
      - ./confs/enabled/cache.env
      - ./confs/enabled/portal.env
    volumes:
      - './src/python/portal:/apps/app'
      - './volumes/portalapp_media:/var/media'
      - './volumes/portalapp_static:/var/static'
    depends_on:
      cache:
        condition: service_healthy
      db:
        condition: service_healthy
      #   healthcheck:
      #     test: ["CMD-SHELL", "curl --silent --fail http://portalapp:8000/health/ | grep 'Database: OK' || exit 1"]
      #     interval: 3s
      #     timeout: 1s
      #     start_period: 1s
      #     retries: 30

  ava01:
    image: 'ctezlifrn/moodle:4.0.4-php8.0-006'
    restart: always
    ports:
      - '8011:80'
    env_file:
      - ./confs/enabled/db.env
      - ./confs/enabled/cache.env
      - ./confs/enabled/ava01.env
    volumes:
      # Plugins
      # - './src/php/moodle__auth_suap:/var/www/html/auth/suap'
      - './src/php/moodle__block_suapattendance:/var/www/html/blocks/suapattendance'
      - './src/php/moodle__local_suapsync:/var/www/html/local/suapsync'
      # Data
      - './volumes/ava01_moodledata:/var/moodledata'
    depends_on:
      db:
        condition: service_healthy
      # healthcheck:
      #   test: ["CMD-SHELL", "curl --silent --fail http://ava01:80/ | grep AVA_01 || exit 1"]
      #   interval: 3s
      #   timeout: 1s
      #   start_period: 1s
      #   retries: 30

  ava02:
    image: 'ctezlifrn/moodle:4.0.4-php8.0-006'
    restart: always
    ports:
      - '8021:80'
    env_file:
      - ./confs/enabled/db.env
      - ./confs/enabled/cache.env
      - ./confs/enabled/ava02.env
    volumes:
      # Plugins
      # - './src/php/moodle__auth_suap:/var/www/html/auth/suap'
      # - './src/php/moodle__block_suapattendance:/var/www/html/blocks/suapattendance'
      # - './src/php/moodle__local_suapsync:/var/www/html/local/suapsync'
      # Data
      - './volumes/ava02_moodledata:/var/moodledata'
    depends_on:
      db:
        condition: service_healthy
      # healthcheck:
      #   test: ["CMD-SHELL", "curl --silent --fail http://ava02:80/ | grep AVA_02 || exit 1"]
      #   interval: 3s
      #   timeout: 1s
      #   start_period: 1s
      #   retries: 30
