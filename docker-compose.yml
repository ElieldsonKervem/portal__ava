version: '3.7'

services:

  # proxy:
  #   image: nginx:1.21.6-alpine
  #   restart: always
  #   ports:
  #     - "80:80"
  #   volumes:  
  #     - "./confs/enabled/proxy/default.conf:/etc/nginx/conf.d/default.conf"
  #     - "../volumes/app_static:/var/app_static"
  #     - "../volumes/app_media:/var/app_media"
  #   healthcheck:
  #     test: ["CMD", "curl", "--fail", "http://localhost"]
  #     interval: 3s
  #     timeout: 3s
  #     retries: 3
  #     start_period: 10s

  db:
    image: postgres:14.2-alpine
    restart: always
    env_file:
      - ./confs/enabled/db.env
    volumes:
      - "./volumes/db_data:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ava_user"]
      interval: 3s
      timeout: 3s
      retries: 3
      start_period: 10s

  dbfake:
    image: postgres:14.2-alpine
    restart: always
    env_file:
      - ./confs/enabled/dbfake.env
    volumes:
      - "./volumes/dbfake_data:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ava_user"]
      interval: 3s
      timeout: 3s
      retries: 3
      start_period: 10s

  cache:
    image: redis:7.0.0
    restart: always
    env_file:
      - ./confs/enabled/cache.env
    volumes:
      - "./volumes/cache_data:/data"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]      
      interval: 3s
      timeout: 3s
      retries: 3
      start_period: 10s

  portal:
    image: 'ifrn/avaportal:1.0.12'
    build: src/python/portal
    restart: always
    ports:
      - '8000:8000'
    env_file:
      - ./confs/enabled/db.env
      - ./confs/enabled/portal.env
      - ./confs/enabled/cache.env
    volumes:
      - './src/python/portal:/apps/app'
      - './volumes/app_media:/var/media'
      - './volumes/app_static:/var/static'
    depends_on:
      db:
        condition: service_healthy

  fake:
    image: 'ifrn/suapfake:1.0.12'
    build: src/python/fake
    restart: always
    ports:
      - '8001:8000'
    env_file:
      - ./confs/enabled/dbfake.env
      - ./confs/enabled/fake.env
      - ./confs/enabled/cache.env
    volumes:
      - './src/python/fake:/apps/app'
      - './volumes/fake_media:/var/media'
      - './volumes/fake_static:/var/static'
    depends_on:
      dbfake:
        condition: service_healthy

  ava_zl_01:
    # image: moodlehq/moodle-php-apache:8.1-bullseye # not for production
    # image: moodlehq/moodle-php-apache:7.4-bullseye
    image: 'ifrn/mooodle:3.11.7'
    build: src/php
    restart: always
    ports:
      - '8011:80'
    env_file:
      - ./confs/enabled/db.env
      - ./confs/enabled/cache.env
    volumes:
      # Plugins
      - './src/php/moodle-customfield_file:/var/www/html/customfield/field/file'

      # Data
      - './volumes/moodledata_zl:/var/moodledata'
    depends_on:
      db:
        condition: service_healthy
